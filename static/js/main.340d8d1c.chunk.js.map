{"version":3,"sources":["forms/queryForm/QueryForm.module.scss","workers/searchWorker.ts","app/App.module.scss","utilities/ErrorMessages.ts","utilities/Validators.ts","components/errors/ErrorBox.tsx","forms/queryForm/QueryForm.tsx","forms/queryForm/InnerForm.tsx","components/Results/ResultList.tsx","components/Results/NoResultsFound.tsx","utilities/pluralWordHelper.ts","components/Results/Results.tsx","utilities/WordFinder.ts","app/App.tsx","reportWebVitals.ts","index.tsx","components/Results/Results.module.scss"],"names":["module","exports","addMethods","methods","w","Worker","name","messages","en","query","required","onlyLetters","maxCount","minimum","lesserThanMin","minCount","greaterThanMax","pl","ErrorBox","message","visible","Transition","animation","duration","Message","negative","QueryForm","withFormik","mapPropsToValues","props","initialQuery","initialMaxCount","initialMinCount","unique","initialUnique","validate","values","errors","match","ErrorMessages","validateQuery","validateMinCount","validateMaxCount","handleSubmit","handleQuerySearch","clearResults","flagOutsideSubmitting","setSubmitting","touched","isSubmitting","className","cssClasses","FormGroup","widths","grouped","label","type","min","max","style","marginTop","primary","disabled","ResultList","resultElements","results","map","result","List","Item","TransitionGroup","as","divided","size","NoResultsFound","join","Header","Content","getWordSuffix","number","hundreds","includes","Results","isSearched","segment","Dimmer","active","inverted","Loader","length","Segment","noBorder","WordFinder","_letters","_maxCount","_minCount","_unique","this","split","RegExp","PrepareRegex","instance","worker","word","lastIndex","searchWords","res","forEach","letter","App","useState","setResults","setIsSubmitting","setIsSearched","handleResultsAdd","oldState","markCompletion","a","wf","SearchGenerator","Container","container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.340d8d1c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"QueryForm\":\"QueryForm_QueryForm__1nDVg\"};","\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"searchWords\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"53f6051d6d419ca02484.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__MiK3W\"};","interface queryMessages {\n  required: string;\n  onlyLetters: string\n}\n\ninterface minCountMessages {\n  minimum: string;\n  greaterThanMax: string;\n}\n\ninterface maxCountMessages {\n  minimum: string;\n  lesserThanMin: string;\n\n}\n\ninterface IMessages {\n  query: queryMessages;\n  minCount: minCountMessages;\n  maxCount: maxCountMessages;\n}\n\nconst messages: Record<string, IMessages> = {\n  en: {\n    query: {\n      required: 'Required',\n      onlyLetters: 'Must contain only letters or space character'\n    },\n    maxCount: {\n      minimum: 'Maximum number of letters in a word must be at least 1.',\n      lesserThanMin: 'Maximum number of letters must greater or equal to minimum number of letters.'\n    },\n    minCount: {\n      minimum: 'Minimum number of letters in a word must be at least 1.',\n      greaterThanMax: 'Minimum number of letters must less or equal to maximum number of letters.'\n    }\n  },\n  pl: {\n    query: {\n      required: 'Wymagane',\n      onlyLetters: 'Musi zawierać wyłacznie litery lub znak spacji.'\n    },\n    maxCount: {\n      minimum: 'Maksymalna liczba liter musi być więszka lub równa 1.',\n      lesserThanMin: 'Maksymalna liczba liter musi być większa lub równa minimalnej liczbie liter.'\n    },\n    minCount: {\n      minimum: 'Minimalna liczba liter w słowie musi wynosić co najmniej 1.',\n      greaterThanMax: 'Minimalna liczba liter musi być mniejsza lub równa maksymalnej liczbie liter.'\n    }\n  }\n}\n\nexport default messages\n","import { QueryFormValues } from '../model/QueryForm'\nimport { FormikErrors } from 'formik'\nimport ErrorMessages from './ErrorMessages'\n\nfunction validateQuery ({ query }: QueryFormValues, errors: FormikErrors<QueryFormValues>) {\n  if (!query) {\n    errors.query = ErrorMessages.pl.query.required\n    return\n  }\n  if (!query.match(/^[a-zA-Z zżźćńółęąśŻŹĆĄŚĘŁÓŃ]+$/)) {\n    errors.query = ErrorMessages.pl.query.onlyLetters\n  }\n}\n\nfunction validateMinCount ({ minCount, maxCount }: QueryFormValues, errors: FormikErrors<QueryFormValues>) {\n  if (minCount < 1) {\n    errors.minCount = ErrorMessages.pl.minCount.minimum\n    return\n  }\n  if (minCount > maxCount) {\n    errors.minCount = ErrorMessages.pl.minCount.greaterThanMax\n  }\n}\n\nfunction validateMaxCount ({ maxCount, minCount }: QueryFormValues, errors: FormikErrors<QueryFormValues>) {\n  if (maxCount < 1) {\n    errors.minCount = ErrorMessages.pl.maxCount.minimum\n    return\n  }\n  if (minCount > maxCount) {\n    errors.minCount = ErrorMessages.pl.maxCount.lesserThanMin\n  }\n}\n\nexport const validateQueryForm = (values: QueryFormValues) => {\n  const errors: FormikErrors<QueryFormValues> = {}\n  validateQuery(values, errors)\n  validateMinCount(values, errors)\n  validateMaxCount(values, errors)\n  return errors\n}\n","import { Message, Transition } from 'semantic-ui-react'\n\ninterface Props {\n  message: string,\n  visible: boolean\n}\n\nconst ErrorBox = ({ message, visible }: Props) => {\n  return (\n    <Transition visible={visible} animation='fade down' duration={500}>\n      <Message negative>{message}</Message>\n    </Transition>\n  )\n}\n\nexport default ErrorBox\n","import { withFormik } from 'formik'\nimport { QueryFormProps, QueryFormValues } from '../../model/QueryForm'\nimport { validateQueryForm } from '../../utilities/Validators'\nimport { InnerForm } from './InnerForm'\n\nconst QueryForm = withFormik<QueryFormProps, QueryFormValues>({\n  mapPropsToValues: props => {\n    return {\n      query: props.initialQuery ?? '',\n      maxCount: props.initialMaxCount ?? 5,\n      minCount: props.initialMinCount ?? 1,\n      unique: props.initialUnique ?? true\n    }\n  },\n  validate: validateQueryForm,\n  handleSubmit: (values, {\n    props: { handleQuerySearch, clearResults, setSubmitting: flagOutsideSubmitting }, setSubmitting\n  }) => {\n    clearResults()\n    flagOutsideSubmitting(true)\n    handleQuerySearch(values, () => setSubmitting(false))\n  }\n})(InnerForm)\n\nexport default QueryForm\n","import { FormikProps } from 'formik'\nimport { QueryFormValues } from '../../model/QueryForm'\nimport { Checkbox, Form, Input, SubmitButton } from 'formik-semantic-ui-react'\nimport cssClasses from './QueryForm.module.scss'\nimport { FormGroup } from 'semantic-ui-react'\nimport ErrorBox from '../../components/errors/ErrorBox'\n\nexport const InnerForm = (props: FormikProps<QueryFormValues>) => {\n  const { touched, errors, isSubmitting, values: { minCount, maxCount } } = props\n  return (\n    <Form className={cssClasses.QueryForm}>\n      <FormGroup widths={'equal'} grouped>\n        <Input label=\"Litery\" type=\"text\" name=\"query\"/>\n        <Checkbox name='unique' label=\"Bez powtórzeń\"/>\n        <ErrorBox visible={!!errors.query && !!touched.query} message={errors.query ?? ''}/>\n      </FormGroup>\n      <FormGroup widths={'equal'}>\n        <Input label=\"Maks liczba liter\" type=\"number\" name=\"maxCount\" min={minCount}/>\n        <ErrorBox visible={!!errors.maxCount && !!touched.maxCount} message={errors.maxCount ?? ''}/>\n\n        <Input label=\"Min liczba liter\" type=\"number\" name=\"minCount\" min={1} max={maxCount}/>\n        <ErrorBox visible={!!errors.minCount && !!touched.minCount} message={errors.minCount ?? ''}/>\n      </FormGroup>\n      <SubmitButton style={{ marginTop: '20px' }} type=\"submit\" primary disabled={isSubmitting}>\n        Szukaj\n      </SubmitButton>\n    </Form>\n  )\n}\n","import { List, TransitionGroup } from 'semantic-ui-react'\n\ninterface Props {\n  results: string[]\n}\n\nconst ResultList = ({ results }: Props) => {\n  const resultElements = results.map(result => (\n    <List.Item key={result}>\n      {result}\n    </List.Item>\n  ))\n\n  return <TransitionGroup as={List} duration={600} animation={'fade left'} divided size='huge'>\n    {resultElements}\n  </TransitionGroup>\n}\n\nexport default ResultList\n","import { Message } from 'semantic-ui-react'\nimport cssClasses from './Results.module.scss'\n\nconst NoResultsFound = () => {\n  return <Message className={[cssClasses.message].join(' ')}>\n    <Message.Header>Nie znaleziono wyrazów spełniających podane parametry.</Message.Header>\n    <Message.Content>Spróbuj poszukać czegoś innego.</Message.Content>\n  </Message>\n}\n\nexport default NoResultsFound\n","\nexport function getWordSuffix (number: number): string {\n  const hundreds = number % 100\n  const singles = number % 10\n  if (number === 1) {\n    return ''\n  }\n  if (hundreds >= 10 && hundreds <= 20) {\n    return 'ów'\n  }\n  if ([2, 3, 4].includes(singles) && (hundreds > 20 || hundreds < 10)) {\n    return 'y'\n  }\n  return 'ów'\n}\n","import cssClasses from './Results.module.scss'\nimport { Dimmer, Header, Loader, Message, Segment } from 'semantic-ui-react'\nimport ResultList from './ResultList'\nimport NoResultsFound from './NoResultsFound'\nimport { getWordSuffix } from '../../utilities/pluralWordHelper'\n\ninterface Props {\n  results: string[],\n  isSubmitting: boolean,\n  isSearched: boolean\n}\n\nconst Results = ({ results, isSubmitting, isSearched }: Props) => {\n  if (!isSearched) {\n    return <Segment className={[cssClasses.results, cssClasses.noBorder].join(' ')}>\n      <strong>Wpisz litery w formularzu powyżej, aby wyszukać wyrazy.</strong>\n    </Segment>\n  }\n\n  if (isSubmitting) {\n    return <Message className={cssClasses.segment}>\n      <Dimmer active inverted>\n        <Loader>Szukam...</Loader>\n      </Dimmer>\n    </Message>\n  }\n\n  return (\n    <div className={cssClasses.results}>\n      <Header size=\"medium\">Znalazłem {results.length} wyraz{getWordSuffix(results.length)}.</Header>\n      <ResultList results={results}/>\n      {results.length <= 0 && <NoResultsFound/>}\n    </div>\n  )\n}\n\nexport default Results\n","import { QueryFormValues } from '../model/QueryForm'\n// @ts-ignore\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport worker from 'workerize-loader!../workers/searchWorker'\n\nclass WordFinder {\n  private readonly _letters: string[];\n  private readonly _maxCount: number;\n  private readonly _minCount: number;\n  private readonly _unique: boolean;\n\n  constructor ({ maxCount, minCount, query, unique }: QueryFormValues) {\n    this._unique = unique\n    this._letters = query.split(' ')\n    this._maxCount = maxCount\n    this._minCount = minCount\n  }\n\n  public async * SearchGenerator (): AsyncGenerator<string | undefined> {\n    const query = new RegExp(`^${this.PrepareRegex()}$`, 'i')\n    const instance = worker()\n    let word = ''\n    let lastIndex: number = 0\n    while (lastIndex !== -1) {\n      [word, lastIndex] = await instance.searchWords(query, lastIndex)\n      yield word\n    }\n  }\n\n  private PrepareRegex (): string {\n    let res = `${this._unique ? '(?!.*(.).*\\\\1)' : ''}[`\n    this._letters.forEach(letter => {\n      res += `${letter}`\n    })\n    res += `]{${this._minCount},${this._maxCount}}`\n    return res\n  }\n}\n\nexport default WordFinder\n","import { useState } from 'react'\nimport { Container } from 'semantic-ui-react'\nimport QueryForm from '../forms/queryForm/QueryForm'\nimport Results from '../components/Results/Results'\nimport WordFinder from '../utilities/WordFinder'\nimport { QueryFormValues } from '../model/QueryForm'\nimport style from './App.module.scss'\n\nfunction App () {\n  const [results, setResults] = useState<string[]>([])\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [isSearched, setIsSearched] = useState(false)\n\n  const handleResultsAdd = (result: string) => {\n    setResults(oldState => [...oldState, result])\n  }\n\n  const handleQuerySearch = async (values: QueryFormValues, markCompletion: () => void) => {\n    const wf = new WordFinder(values)\n    for await (const word of wf.SearchGenerator()) {\n      setIsSubmitting(false)\n      if (word) {\n        handleResultsAdd(word)\n      }\n    }\n    markCompletion()\n  }\n\n  const handleResultsClear = () => {\n    setIsSearched(true)\n    setResults([])\n  }\n\n  return (\n    <Container className={style.container}>\n      <QueryForm handleQuerySearch={handleQuerySearch} initialMinCount={3} initialMaxCount={7}\n                 clearResults={handleResultsClear} setSubmitting={setIsSubmitting}/>\n      <Results results={results} isSubmitting={isSubmitting} isSearched={isSearched}/>\n    </Container>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import ReactDOM from 'react-dom'\nimport './index.scss'\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './app/App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"results\":\"Results_results__24xMo\",\"message\":\"Results_message__aOygJ\",\"noBorder\":\"Results_noBorder__2KKKc\",\"noShadow\":\"Results_noShadow__tErkd\"};"],"sourceRoot":""}